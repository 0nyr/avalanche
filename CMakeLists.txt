cmake_minimum_required(VERSION 3.0.0)

# project name and version
project(avalanche VERSION 0.1.0)

# set the debug flag, to be removed with final releases
set(CMAKE_BUILD_TYPE Debug)

# add source files then put them into the source variable
file(GLOB SOURCE 
    ${PROJECT_SOURCE_DIR}/include/*.hpp
    ${PROJECT_SOURCE_DIR}/include/gui/*.hpp
    ${PROJECT_SOURCE_DIR}/src/gui/*.cpp
    ${PROJECT_SOURCE_DIR}/src/*.cpp
)

# add include/
#target_include_directories(${PROJECT_NAME} PUBLIC "./include")
include_directories(
    ${PROJECT_SOURCE_DIR}/include
    ${PROJECT_SOURCE_DIR}/include/gui
    ${PROJECT_SOURCE_DIR}/src
    ${PROJECT_SOURCE_DIR}/src/gui
)

# add ressources
file(GLOB RES_FILES
    ${PROJECT_SOURCE_DIR}/res/fonts/silkscreen/slkscr.ttf
    ${PROJECT_SOURCE_DIR}/res/fonts/minecraftia/Minecraftia-Regular.ttf
)
file(COPY ${RES_FILES} 
    DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/res/
)
#configure_file(${RES_FILES} ${CMAKE_CURRENT_BINARY_DIR}/res/ COPYONLY)

# add the executable
add_executable(${PROJECT_NAME} ${SOURCE})

# add libraries
target_link_libraries(${PROJECT_NAME} sfml-graphics sfml-window sfml-system)

# autogenerated
include(CTest)
enable_testing()
set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)
